/**
 * Course: IT351 - Advance Java Programming
 * Filename:StoreGUI.java
 * Module: GUI form to interact with the database
 * Created: 09/01/2016
 * Modified:09/01/2016
 * 
 * Purpose: This application will allow the user to interact with the database. They will be able to query, Insert, Update, Delete and inquire on a specific record. There
 * are two different sections.One is strictly for the customer table and the other is for the product table. The text area at the bottom of the screen is a common notification
 * area.
 * Modification:
 * 
 * Note: Connection definition to access encrypted access database
 * Connection con2 = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb;jackcessOpener=CryptCodecOpener","Duane", "student");
 */
package IT351IP3;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Duane Osburn
 */
public class StoreGUI extends javax.swing.JFrame {

    /**
     * Creates new form StoreGUI
     */
    public StoreGUI() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pProdIdIn = new javax.swing.JTextField();
        pProdName = new javax.swing.JTextField();
        pProdDesc = new javax.swing.JTextField();
        pProdPrice = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        cCustIdIn = new javax.swing.JTextField();
        cFirstName = new javax.swing.JTextField();
        cAddr = new javax.swing.JTextField();
        cCity = new javax.swing.JTextField();
        cZip = new javax.swing.JTextField();
        cPhone = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cLastName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cState = new javax.swing.JTextField();
        pQuerryAll = new javax.swing.JButton();
        pQuerryOne = new javax.swing.JButton();
        pInsert = new javax.swing.JButton();
        pUpdate = new javax.swing.JButton();
        pDelete = new javax.swing.JButton();
        cQuerryAll = new javax.swing.JButton();
        cQuerryOne = new javax.swing.JButton();
        cInsert = new javax.swing.JButton();
        cUpdate = new javax.swing.JButton();
        cDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Storefront Processor");

        displayArea.setColumns(20);
        displayArea.setRows(5);
        jScrollPane1.setViewportView(displayArea);

        jLabel1.setText("Product ID");

        jLabel2.setText("Product Name");

        jLabel3.setText("Product Description");

        jLabel4.setText("Product Price");

        pProdIdIn.setText(" ");

        pProdName.setText(" ");

        pProdDesc.setText(" ");

        pProdPrice.setText(" ");

        jLabel5.setText("Customer ID");

        jLabel6.setText("First Name");

        jLabel7.setText("Address");

        jLabel8.setText("City");

        jLabel9.setText("Zip Code");

        jLabel10.setText("Phone");

        cCustIdIn.setText(" ");

        cFirstName.setText(" ");

        cAddr.setText(" ");

        cCity.setText(" ");

        cZip.setText(" ");

        cPhone.setText(" ");

        jLabel11.setText("Last Name");

        cLastName.setText(" ");

        jLabel12.setText("State");

        cState.setText(" ");

        pQuerryAll.setText("Querry All");
        pQuerryAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pQuerryAllActionPerformed(evt);
            }
        });

        pQuerryOne.setText("Querry One");
        pQuerryOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pQuerryOneActionPerformed(evt);
            }
        });

        pInsert.setText("Insert");
        pInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pInsertActionPerformed(evt);
            }
        });

        pUpdate.setText("Update");
        pUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pUpdateActionPerformed(evt);
            }
        });

        pDelete.setText("Delete");
        pDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pDeleteActionPerformed(evt);
            }
        });

        cQuerryAll.setText("Querry All");
        cQuerryAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cQuerryAllActionPerformed(evt);
            }
        });

        cQuerryOne.setText("Querry One");
        cQuerryOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cQuerryOneActionPerformed(evt);
            }
        });

        cInsert.setText("Insert");
        cInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cInsertActionPerformed(evt);
            }
        });

        cUpdate.setText("Update");
        cUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cUpdateActionPerformed(evt);
            }
        });

        cDelete.setText("Delete");
        cDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pProdDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pProdName, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pProdIdIn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pQuerryOne)
                                            .addComponent(pQuerryAll)))
                                    .addComponent(pProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                            .addComponent(cFirstName, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cState, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(cCustIdIn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cZip, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cQuerryOne)
                                    .addComponent(cQuerryAll))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pInsert)
                                    .addComponent(pUpdate)
                                    .addComponent(pDelete))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cUpdate)
                                    .addComponent(cInsert)
                                    .addComponent(cDelete))
                                .addGap(13, 13, 13)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pProdIdIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pQuerryAll)
                    .addComponent(pInsert))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pProdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pQuerryOne)
                    .addComponent(pUpdate))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(pProdDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(pDelete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cCustIdIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cQuerryAll)
                    .addComponent(cInsert))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(cLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cQuerryOne)
                    .addComponent(cUpdate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cDelete))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Product Query All Button
    private void pQuerryAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pQuerryAllActionPerformed
        displayArea.setText(" ");
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            ProductDao dao = new ProductDao(con);
            for(Product p: dao.query())
            {
                displayArea.append(p.toString());
                displayArea.append("\n");
            }
            
        } catch (SQLException ex) {
            System.out.println("Error in Product Querry All");
            //Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
       }
    //End product query all button    
    }//GEN-LAST:event_pQuerryAllActionPerformed

    //Product Delete Record Button
    private void pDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pDeleteActionPerformed
        displayArea.setText(" ");
        Product p = new Product();
        int id = Integer.parseInt(pProdIdIn.getText().trim());
        p.setProductId(id);
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            ProductDao dao = new ProductDao(con);
            dao.delete(p);
            System.out.println("Record deleted");
            String msg="Record " + id + " has been deleted";
            JOptionPane.showMessageDialog(null, msg);
            
        } catch (SQLException ex) {
            System.out.println("Error in Product Delete");
            //Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        pProdIdIn.setText(" ");
    //End Product Delete Button
    }//GEN-LAST:event_pDeleteActionPerformed

    //Product Insert Button
    private void pInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pInsertActionPerformed
        displayArea.setText(" ");
        Product p = new Product();
        //Build product class to be passed
        int id = Integer.parseInt(pProdIdIn.getText().trim());
        p.setProductId(id);
        String name = pProdName.getText();
        p.setProductName(name);
        String desc = pProdDesc.getText();
        p.setProductDesc(desc);
        double pprice = Double.parseDouble(pProdPrice.getText().trim());
        p.setProductPrice(pprice);
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            ProductDao dao = new ProductDao(con);
            dao.insert(p);
            System.out.println("Record inserted");
            String msg="Record " + id + " has been Inserted";
            JOptionPane.showMessageDialog(null, msg);
            
        } catch (SQLException ex) {
            System.out.println("Error in Product insert");
            //Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        pProdIdIn.setText(" ");
        pProdName.setText(" ");
        pProdDesc.setText(" ");
        pProdPrice.setText(" ");
    //End Product Insert Button   
    }//GEN-LAST:event_pInsertActionPerformed

    //Product Update Button
    private void pUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pUpdateActionPerformed
        displayArea.setText(" ");
        Product p = new Product();
        int id = Integer.parseInt(pProdIdIn.getText().trim());
        p.setProductId(id);
        double pprice = Double.parseDouble(pProdPrice.getText().trim());
        p.setProductPrice(pprice);
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            ProductDao dao = new ProductDao(con);
            dao.update(p);
            System.out.println("Record Updated");
            String msg="Record " + id + " has been Updated";
            JOptionPane.showMessageDialog(null, msg);
            
        } catch (SQLException ex) {
            System.out.println("Error in Product Update");
            String msg="Only the price can be updated";
            JOptionPane.showMessageDialog(null, msg);
            //Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        pProdIdIn.setText(" ");
        pProdPrice.setText(" ");
    //End Product Update Button    
    }//GEN-LAST:event_pUpdateActionPerformed

    //Product Single Record Inquiry Button
    private void pQuerryOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pQuerryOneActionPerformed
        displayArea.setText(" ");
        Product p = new Product();
        int id = Integer.parseInt(pProdIdIn.getText().trim());
        p.setProductId(id);
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            ProductDao dao = new ProductDao(con);
            Product x = new Product();
            x = dao.inquiry(p);
            displayArea.append(x.toString());
            displayArea.append("\n");
            
        } catch (SQLException ex) {
            System.out.println("Error in Product Querry one");
            //Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
       }
        pProdIdIn.setText(" ");
    //End Product Single Record Inquiry
    }//GEN-LAST:event_pQuerryOneActionPerformed

    //Customer Query All Button
    private void cQuerryAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cQuerryAllActionPerformed
        displayArea.setText(" ");
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            CustomerDao dao = new CustomerDao(con);
            for(Customer c: dao.query())
            {
                displayArea.append(c.toString());
                displayArea.append("\n");
            }
        } catch (SQLException ex) {
            System.out.println("Error in Customer Querry All");
            //Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
       }
    //End Customer Query All 
    }//GEN-LAST:event_cQuerryAllActionPerformed

    //Customer Query Single Record
    private void cQuerryOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cQuerryOneActionPerformed
        displayArea.setText(" ");
        Customer c = new Customer();
        int id = Integer.parseInt(cCustIdIn.getText().trim());
        c.setCustID(id);
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            CustomerDao dao = new CustomerDao(con);
            Customer x = new Customer();
            x = dao.inquiry(c);
            displayArea.append(x.toString());
            displayArea.append("\n");
            
        } catch (SQLException ex) {
            System.out.println("Error in Product Querry one");
            //Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
       }
        cCustIdIn.setText(" ");
    //End Customer Query Single Record    
    }//GEN-LAST:event_cQuerryOneActionPerformed

    //Customer Insert Record Button
    private void cInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cInsertActionPerformed
        displayArea.setText(" ");
        Customer c = new Customer();
        //Build customer record
        int id = Integer.parseInt(cCustIdIn.getText().trim());
        c.setCustID(id);
        System.out.println(id);
        String fNname = cFirstName.getText();
        c.setCustFName(fNname);
        String lName = cLastName.getText();
        c.setCustLName(lName);
        String addr = cAddr.getText();
        c.setCustStAddr(addr);
        String city = cCity.getText();
        c.setCustCity(city);
        String state = cState.getText();
        c.setCustState(state);
        int zip = Integer.parseInt(cZip.getText().trim());
        c.setCustZip(zip);
        String phone = cPhone.getText();
        c.setCustPhone(phone);
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            CustomerDao dao = new CustomerDao(con);
            dao.insert(c);
            System.out.println("Record inserted");
            String msg="Record " + id + " has been Inserted";
            JOptionPane.showMessageDialog(null, msg);
            
        } catch (SQLException ex) {
            System.out.println("Error in Product insert");
            //Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        cCustIdIn.setText(" ");
        cFirstName.setText(" ");
        cLastName.setText(" ");
        cAddr.setText(" ");
        cCity.setText(" ");
        cState.setText(" ");
        cZip.setText(" ");
        cPhone.setText(" ");
    //End Customer Insert    
    }//GEN-LAST:event_cInsertActionPerformed

    //Customer Update Record button
    private void cUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cUpdateActionPerformed
        displayArea.setText(" ");
        Customer c = new Customer();
        //Build customer record
        int id = Integer.parseInt(cCustIdIn.getText().trim());
        c.setCustID(id);
        String addr = cAddr.getText();
        c.setCustStAddr(addr);
        String city = cCity.getText();
        c.setCustCity(city);
        String state = cState.getText();
        c.setCustState(state);
        int zip = Integer.parseInt(cZip.getText().trim());
        c.setCustZip(zip);
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            CustomerDao dao = new CustomerDao(con);
            dao.update(c);
            System.out.println("Record Updated");
            String msg="Record " + id + " has been Updated";
            JOptionPane.showMessageDialog(null, msg);
            
        } catch (SQLException ex) {
            System.out.println("Error in Customer Update");
            String msg="Only the address, city, state and zip code can be updated";
            JOptionPane.showMessageDialog(null, msg);
            Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        cCustIdIn.setText(" ");
        cAddr.setText(" ");
        cCity.setText(" ");
        cState.setText(" ");
        cZip.setText(" ");
    //End Customer update Record    
    }//GEN-LAST:event_cUpdateActionPerformed

    //Customer Delete Record Button
    private void cDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cDeleteActionPerformed
        displayArea.setText(" ");
        Customer c = new Customer();
        int id = Integer.parseInt(cCustIdIn.getText().trim());
        c.setCustID(id);
        try {
            Connection con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\User\\Documents\\IT351Store.accdb");
            CustomerDao dao = new CustomerDao(con);
            dao.delete(c);
            System.out.println("Record deleted");
            String msg="Record " + id + " has been deleted";
            JOptionPane.showMessageDialog(null, msg);
            
        } catch (SQLException ex) {
            System.out.println("Error in Customer Delete");
            Logger.getLogger(StoreGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        cCustIdIn.setText(" ");
    //End Customer Delete Record    
    }//GEN-LAST:event_cDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoreGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoreGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoreGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoreGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoreGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cAddr;
    private javax.swing.JTextField cCity;
    private javax.swing.JTextField cCustIdIn;
    private javax.swing.JButton cDelete;
    private javax.swing.JTextField cFirstName;
    private javax.swing.JButton cInsert;
    private javax.swing.JTextField cLastName;
    private javax.swing.JTextField cPhone;
    private javax.swing.JButton cQuerryAll;
    private javax.swing.JButton cQuerryOne;
    private javax.swing.JTextField cState;
    private javax.swing.JButton cUpdate;
    private javax.swing.JTextField cZip;
    private javax.swing.JTextArea displayArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton pDelete;
    private javax.swing.JButton pInsert;
    private javax.swing.JTextField pProdDesc;
    private javax.swing.JTextField pProdIdIn;
    private javax.swing.JTextField pProdName;
    private javax.swing.JTextField pProdPrice;
    private javax.swing.JButton pQuerryAll;
    private javax.swing.JButton pQuerryOne;
    private javax.swing.JButton pUpdate;
    // End of variables declaration//GEN-END:variables
}
